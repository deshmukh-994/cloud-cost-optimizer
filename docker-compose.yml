version: '3.9'

services:
  spring-boot-app:
    build: ./Cloud-Cost-Optimization
    container_name: spring-app
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_SNS_TOPIC_ARN: ${AWS_SNS_TOPIC_ARN}

  node-service:
    build: ./cloud-cost-node
    container_name: node-service
    ports:
      - "${NODE_HOST_PORT}:${NODE_CONTAINER_PORT}"
    depends_on:
      - postgres

  python-ml:
    build: ./anomaly-detector
    container_name: python-ml
    ports:
      - "${PYTHON_HOST_PORT}:${PYTHON_CONTAINER_PORT}"
    environment:
        - PORT=${PYTHON_CONTAINER_PORT}

  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5435:5435"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3100:3000"
    depends_on:
      - postgres
    environment:
      GF_SECURITY_ADMIN_USER : ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  postgres-data:
  grafana-data:


